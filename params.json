{"name":"Universal DX task- Connecting R with JAVA","tagline":"Author: Francisco A. Gómez Vela ","body":"SUMMARY:\r\n-------\r\n\r\nSelected Classifier:\r\n--------------------\r\n\r\nI have used the naives Bayes classifier[1] since it is a simple probabilistic classifier based on applying Bayes' theorem (from Bayesian statistics) with strong (naive) independence assumptions. A more descriptive term for the underlying probability model would be \"independent feature model\".\r\nAn advantage of the naive Bayes classifier is that it requires a small amount of training data to estimate the parameters (means and variances of the variables) necessary for classification [2].Because independent variables are assumed, only the variances of the variables for each class need to be determined and not the entire covariance matrix.\r\n\r\nSolutions:\r\n----------\r\n\r\nI have worked before with the RCaller library to connect R with JAVA. Therefore, I have developed two different solutions in the same JAVA project:\r\n\r\n\t1. Rserve-based as it was described in the instructions: TaskWithRserve.java\r\n\t\r\n\t2. And a RCaller-based to complement the solution for the task: TaskWithRCaller.java\r\n\r\n\r\nFiles contained:\r\n----------------\r\n\r\n\t* task.R - a script with the code of the two requested functions (trainer, labels).\r\n\t* folder \"java executable\" - this folder contains a .jar file to execute the task using Rserve (\"java -jar DXtask.jar\").\r\n\t* DXTask.zip - this file contains the eclipse JAVA project that access to the R functions with two different JAVA-based libraries Rserve and RCaller.\r\n\t* wdbc.data - the dataset used for the task, this dataset is described below.\r\n\t* \"java main sources\" - this folder contains the two principal JAVA classes: TaskWithRserve.java and TaskWithRCaller.java\r\n\t\r\n\r\n\t\r\nCONSIDERATIONS FOR THE JAVA PROGRAMS:\r\n-------------------------------------\r\n\r\nAll the parameters are defined in the \"config.properties\" file.\r\n\r\nRserve Solution:\r\n\tTo test the Rserve-based JAVA program you should install Rserve in R. The easiest way to install Rserve is to install it from CRAN, simply use\r\n\t\r\n\r\n\tinstall.packages(\"Rserve\")\r\n\r\n\r\nTo start Rserve is from within R, just type:\r\n\r\n\tlibrary(Rserve)\r\n\tRserve()\r\n\r\n\r\nRCaller Solution:\r\n\tTo test the RCaller-based solution you should install the Runiversal package.\r\n\t\r\n\tinstall.packages(\"Runiversal\")\r\n\r\n\r\nDATASET USED INFORMATION:\r\n------------------------\r\n* url: http://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+%28Diagnostic%29\r\n* Breast Cancer Wisconsin (Diagnostic) Data Set.\r\n* Number of Instances: 569\r\n* Number of Attributes: 32\r\n* Without missing values\r\n\r\nAttribute Information:\r\n\r\n\t1) ID number\r\n\t2) Diagnosis (M = malignant, B = benign)---> Label\r\n\r\n\tTen real-valued features are computed for each cell nucleus:\r\n\r\n\ta) radius (mean of distances from center to points on the perimeter)\r\n\tb) texture (standard deviation of gray-scale values)\r\n\tc) perimeter\r\n\td) area\r\n\te) smoothness (local variation in radius lengths)\r\n\tf) compactness (perimeter^2 / area - 1.0)\r\n\tg) concavity (severity of concave portions of the contour)\r\n\th) concave points (number of concave portions of the contour)\r\n\ti) symmetry\r\n\tj) fractal dimension (\"coastline approximation\" - 1)\r\n\r\n\r\n\r\n\r\nR CODE TO TEST THE R FUNCTIONS:\r\n------------------------------\r\n\r\n\r\n\r\n\t\tbreast<-read.csv('wdbc.data', header=FALSE)\r\n\r\n\t\tindex <- 1:nrow(breast)\r\n\t\ttestindex <- sample(index, trunc(length(index)*30/100))\r\n\r\n\t\ttrainset <- breast[-testindex,]\r\n\t\ttestset <-breast[testindex,]\r\n\r\n\t\tcla<-trainer(trainset,trainset[,2])\r\n\r\n\t\tlabels(cla,testset[,-2])\r\n\r\nNOTES : \r\n\t1.First, load the functions in R. \r\n\t2.This code is included in task.R file.\r\n\t3.Please, set the working directory of R (using setwd function) to the directory where is stored your dataset.\r\n\r\n\r\nREFERENCES:\r\n-----------\r\n\t\t[1] Malik Yousef,Segun Jung, Andrew V. Kossenkov,Louise C. Showe,and Michael K. Showe.\r\n\t\t\tNaïve Bayes for microRNA target predictions—machine learning for microRNA targets.\r\n\t\t\tBioinformatics (2007) 23 (22): 2987-2992 first published online October 8, 2007 \t\r\n\t\t[2] Caruana, R.; Niculescu-Mizil, A.\r\n\t\t\tAn empirical comparison of supervised learning algorithms. \r\n\t\t\tProceedings of the 23rd international conference on Machine learning (2006)\t\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}